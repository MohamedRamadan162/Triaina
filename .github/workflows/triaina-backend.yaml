name: "Triaina Backend CI/CD"
permissions:
  contents: read
  packages: write
on:
  workflow_dispatch:
  push:
    branches: ["master"]
    paths:
      - "services/triaina-backend/**"
  pull_request:
    branches: ["master"]
    paths:
      - "services/triaina-backend/**"
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_USERNAME: rails
      POSTGRES_PASSWORD: password
      JWT_SECRET: secret
    services:
      postgres:
        image: postgres:11-alpine
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: triaina_test
          POSTGRES_USER: ${{ env.POSTGRES_USERNAME }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: network=host
      - name: Build Docker image with cache
        uses: docker/build-push-action@v6
        with:
          context: ./services/triaina-backend
          file: ./services/triaina-backend/Dockerfile.dev
          tags: triaina-backend:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            RAILS_ENV=${{ env.RAILS_ENV }}

      - name: Run tests
        run: |
          docker run --rm \
            --network host \
            -e RAILS_ENV=${{ env.RAILS_ENV }} \
            -e POSTGRES_HOST=${{ env.POSTGRES_HOST }} \
            -e POSTGRES_PORT=${{ env.POSTGRES_PORT }} \
            -e POSTGRES_USERNAME=${{ env.POSTGRES_USERNAME }} \
            -e POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }} \
            -e JWT_SECRET=${{ env.JWT_SECRET }} \
            triaina-backend:latest \
            sh -c "rails db:prepare && bundle exec rspec spec/tests"

  build:
    runs-on: ubuntu-latest
    needs: test
    if: success()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ secrets.GHCR_USERNAME }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Push Docker image to GitHub Container Registry
        uses: docker/build-push-action@v6
        with:
          context: ./services/triaina-backend
          file: ./services/triaina-backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ secrets.GHCR_USERNAME }}/triaina-backend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
